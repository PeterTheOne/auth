'\" t
.\"     Title: whawty-auth
.\"    Author: [see the "AUTHORS" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 03/08/2016
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "WHAWTY\-AUTH" "8" "03/08/2016" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
whawty-auth \- manage whawty auth stores
.SH "SYNOPSIS"
.sp
\fBwhawty\-auth\fR \fI[global options]\fR \fBcommand\fR \fI[command options]\fR [arguments\&...]
.SH "DESCRIPTION"
.sp
\fBwhawty\-auth\fR implements everything which is needed to run a whawty auth service\&. This tool can be used to initialize and manage whawty auth stores\&. When used as a daemon it can be used to offer a saslauthd compatible authentication service and or a small web interface to manage users and passwords\&. Together with \fBpam_whawty\fR authentication can also be done using PAM\&.
.SH "GLOBAL OPTIONS"
.sp
The following global options can be passed to \fBwhawty\-auth\fR\&.
.PP
\fB\-\-conf\fR \fI</path/to/config\&.json>\fR
.RS 4
This sets the path to main configuration file\&. By default
\fBwhawty\-auth\fR
uses the file
\fI/etc/whawty\-auth/default\&.json\fR\&. This may also be configured using the environment variable
\fIWHAWTY_AUTH_CONFIG\fR\&. If both the environment variable and the command line option are supplied the latter is used\&.
.RE
.PP
\fB\-\-do\-check\fR\fI[=(true|false)]\fR
.RS 4
Run basic consistency check on the whawty store on startup\&. By default checks are enabled\&. This can also be configured using the environment variable
\fIWHAWTY_AUTH_DO_CHECK\fR\&. If both the environment variable and the command line option are supplied the latter is used\&.
.RE
.PP
\fB\-h | \-\-help\fR
.RS 4
Show help text and exit\&.
.RE
.PP
\fB\-v | \-\-version\fR
.RS 4
Print version information and exit\&.
.RE
.SH "COMMANDS"
.sp
Any of the following commands supports \fB\-h | \-\-help\fR as an option\&. This will print extra help information for the command\&. All these commands use the auth store directory as specified by the main configuration file\&.
.SS "init"
.sp
\fBinit\fR can be used to initialize a whawty auth store\&. For this to work the directory must exist, be writeable by the user who runs the program and must be empty\&. The first argument is the name of the admin user which will get created\&. The password of the user can be supplied using a second optional argument\&. If no password is supplied on the command line \fBwhawty\-auth\fR will prompt the user for it\&.
.SS "check"
.sp
Check the whawty auth store for consistency\&.
.SS "add"
.sp
This adds a user to the store\&. The name of the user must be supplied as the first argument\&. The password may be supplied as a second parameter\&. If this is omitted \fBwhawty\-auth\fR prompts the user for it\&.
.SS "remove"
.sp
\fBremove\fR can be used to delete a user from the store\&. The sole argument supported specifies to user to be deleted\&.
.SS "update"
.sp
This can be used to change the password of an existing user\&. The first argument specifies the username\&. The new password may be specified as a second argument\&. If no password is set using the command line the user will be prompted for it\&.
.SS "set\-admin"
.sp
\fBset\-admin\fR can be used to change the admin status of a user\&. The first argument is the username\&. The second argument should reflect the new status\&. \fBtrue\fR or \fB1\fR enables the admin flag\&. \fBfalse\fR or \fB0\fR disables it\&.
.SS "list"
.sp
This prints a list of all users in the store\&.
.PP
\fB\-\-full\fR
.RS 4
This option tells
\fBwhawty\-auth\fR
to print additional info for each user\&. By default only the name, admin status and last change date are printed\&.
.RE
.SS "authenticate"
.sp
\fBauthenticate\fR runs a full auth\-check for the given user\&. The username in question needs to be supplied as a first argument\&. The second optional argument is the password\&. If no password is specified the user will be prompted for it\&. If the authentication was successful the result code will be 0\&. On error the result code will be 1\&.
.SS "run"
.sp
This instructs \fBwhawty\-auth\fR to run as an authentication service\&.
.PP
\fB\-\-sock\fR \fI</path/to/whawty/sock>\fR
.RS 4
Open a saslauthd compatible unix socket\&. This option might be supplied several times\&.
\fBwhawty\-auth\fR
will listen on all sockets for authentication requests\&. In addition to this pats may be specified using the environment variable
\fIWHAWTY_AUTH_SASL_SOCK\fR
as a comma\-seperated list\&. All sockets defined on command line and via the environment are merged and
\fBwhawty\-auth\fR
will listen on all sockets simultaneously\&.
.RE
.PP
\fB\-web\-addr\fR \fI[<addr>]:<port>\fR
.RS 4
Also start a small web interface on the specified address\&. This can also be specified using the environment variable
\fIWHAWTY_AUTH_WEB_ADDR\fR\&. If both the command line option as well as the environment variable are supplied the value of the command line option will be used\&.
.RE
.SH "BUGS"
.sp
Most likely there are some bugs in \fBwhawty\-auth\fR\&. If you find a bug, please let the developers know at http://github\&.com/whawty/auth\&. Of course, pull requests are preferred\&.
.SH "SEE ALSO"
.sp
\fBpam\-whawty\fR(8)
.SH "AUTHORS"
.sp
Christian Pointner <equinox@spreadspace\&.org>
.SH "RESOURCES"
.sp
Main web site: http://github\&.com/whawty/auth
